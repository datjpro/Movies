@model UserManagementViewModel
@{
    ViewData["Title"] = "Quản lý User";
    ViewData["Breadcrumb"] = "<li class='breadcrumb-item'><a href='/Admin'>Dashboard</a></li><li class='breadcrumb-item active'>Quản lý User</li>";
}

<!-- Search and Filter -->
<div class="admin-card mb-4">
    <div class="card-body">
        <form method="get" class="row g-3">
            <div class="col-md-4">
                <label class="form-label">Tìm kiếm</label>
                <input type="text" class="form-control" name="search" value="@Model.SearchTerm" 
                       placeholder="Tên, email hoặc username...">
            </div>
            <div class="col-md-3">
                <label class="form-label">Lọc theo Role</label>
                <select class="form-select" name="filterRole">
                    <option value="">Tất cả</option>
                    <option value="@UserRoles.Admin" selected="@(Model.FilterRole == UserRoles.Admin)">Admin</option>
                    <option value="@UserRoles.PremiumUser" selected="@(Model.FilterRole == UserRoles.PremiumUser)">Premium User</option>
                    <option value="@UserRoles.FreeUser" selected="@(Model.FilterRole == UserRoles.FreeUser)">Free User</option>
                </select>
            </div>
            <div class="col-md-2">
                <label class="form-label">Số lượng</label>
                <select class="form-select" name="pageSize">
                    <option value="10" selected="@(Model.PageSize == 10)">10</option>
                    <option value="25" selected="@(Model.PageSize == 25)">25</option>
                    <option value="50" selected="@(Model.PageSize == 50)">50</option>
                </select>
            </div>
            <div class="col-md-3 d-flex align-items-end">
                <button type="submit" class="btn btn-admin-primary me-2">
                    <i class="fas fa-search"></i> Tìm kiếm
                </button>
                <a href="@Url.Action("Index")" class="btn btn-outline-secondary">
                    <i class="fas fa-undo"></i> Reset
                </a>
            </div>
        </form>
    </div>
</div>

<!-- Users Table -->
<div class="admin-card">
    <div class="admin-card-header d-flex justify-content-between align-items-center">
        <h5 class="mb-0">
            <i class="fas fa-users me-2"></i>
            Danh sách User (@Model.TotalUsers)
        </h5>
    </div>
    <div class="card-body">
        @if (Model.Users.Any())
        {
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>Avatar</th>
                            <th>Thông tin</th>
                            <th>Roles</th>
                            <th>Trạng thái</th>
                            <th>Ngày tạo</th>
                            <th>Đăng nhập cuối</th>
                            <th>Thao tác</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var user in Model.Users)
                        {
                            <tr>
                                <td>
                                    <div class="user-avatar">
                                        @user.FullName.Substring(0, 1).ToUpper()
                                    </div>
                                </td>
                                <td>
                                    <div>
                                        <strong>@user.FullName</strong>
                                    </div>
                                    <div class="text-muted">@user.Email</div>
                                    @if (!string.IsNullOrEmpty(user.PhoneNumber))
                                    {
                                        <div class="text-muted small">@user.PhoneNumber</div>
                                    }
                                </td>
                                <td>
                                    @if (Model.UserRoles.ContainsKey(user.Id))
                                    {
                                        @foreach (var role in Model.UserRoles[user.Id])
                                        {
                                            <span class="badge bg-@(role == UserRoles.Admin ? "danger" : role == UserRoles.PremiumUser ? "warning" : "info") me-1">
                                                @role
                                            </span>
                                        }
                                    }
                                </td>
                                <td>
                                    <div class="d-flex flex-column">
                                        <span class="status-badge badge bg-@(user.IsActive ? "success" : "secondary")">
                                            @(user.IsActive ? "Hoạt động" : "Tạm khóa")
                                        </span>
                                        @if (user.EmailConfirmed)
                                        {
                                            <span class="status-badge badge bg-success mt-1">Email xác thực</span>
                                        }
                                        else
                                        {
                                            <span class="status-badge badge bg-warning mt-1">Chưa xác thực</span>
                                        }
                                    </div>
                                </td>
                                <td>
                                    @user.CreatedAt.ToString("dd/MM/yyyy HH:mm")
                                </td>
                                <td>
                                    @if (user.LastLoginTime.HasValue)
                                    {
                                        @user.LastLoginTime.Value.ToString("dd/MM/yyyy HH:mm")
                                    }
                                    else
                                    {
                                        <span class="text-muted">Chưa đăng nhập</span>
                                    }
                                </td>
                                <td>
                                    <div class="btn-group" role="group">
                                        <a asp-action="Edit" asp-route-id="@user.Id" 
                                           class="btn btn-sm btn-outline-primary" title="Chỉnh sửa">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                        
                                        <button type="button" class="btn btn-sm btn-outline-@(user.IsActive ? "warning" : "success")" 
                                                onclick="toggleUserStatus('@user.Id', @user.IsActive.ToString().ToLower())" 
                                                title="@(user.IsActive ? "Khóa tài khoản" : "Kích hoạt tài khoản")">
                                            <i class="fas fa-@(user.IsActive ? "lock" : "unlock")"></i>
                                        </button>
                                        
                                        @if (user.Email != User.Identity.Name)
                                        {
                                            <button type="button" class="btn btn-sm btn-outline-danger" 
                                                    onclick="deleteUser('@user.Id', '@user.FullName')" title="Xóa">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        }
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <!-- Pagination -->
            @if (Model.TotalPages > 1)
            {
                <nav class="mt-3">
                    <ul class="pagination justify-content-center">
                        @if (Model.CurrentPage > 1)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@Url.Action("Index", new { page = Model.CurrentPage - 1, pageSize = Model.PageSize, search = Model.SearchTerm, filterRole = Model.FilterRole })">
                                    <i class="fas fa-chevron-left"></i>
                                </a>
                            </li>
                        }

                        @for (int i = Math.Max(1, Model.CurrentPage - 2); i <= Math.Min(Model.TotalPages, Model.CurrentPage + 2); i++)
                        {
                            <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                <a class="page-link" href="@Url.Action("Index", new { page = i, pageSize = Model.PageSize, search = Model.SearchTerm, filterRole = Model.FilterRole })">
                                    @i
                                </a>
                            </li>
                        }

                        @if (Model.CurrentPage < Model.TotalPages)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@Url.Action("Index", new { page = Model.CurrentPage + 1, pageSize = Model.PageSize, search = Model.SearchTerm, filterRole = Model.FilterRole })">
                                    <i class="fas fa-chevron-right"></i>
                                </a>
                            </li>
                        }
                    </ul>
                </nav>
            }
        }
        else
        {
            <div class="text-center py-4">
                <i class="fas fa-users fa-3x text-muted mb-3"></i>
                <h5>Không tìm thấy user nào</h5>
                <p class="text-muted">Thử thay đổi điều kiện tìm kiếm</p>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        function toggleUserStatus(userId, currentStatus) {
            const action = currentStatus ? 'khóa' : 'kích hoạt';
            if (confirm(`Bạn có chắc chắn muốn ${action} tài khoản này?`)) {
                $.ajax({
                    url: '@Url.Action("ToggleStatus")',
                    type: 'POST',
                    data: {
                        id: userId,
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(response) {
                        if (response.success) {
                            location.reload();
                        } else {
                            alert(response.message || 'Có lỗi xảy ra');
                        }
                    },
                    error: function() {
                        alert('Có lỗi xảy ra khi thực hiện yêu cầu');
                    }
                });
            }
        }

        function deleteUser(userId, userName) {
            if (confirm(`Bạn có chắc chắn muốn xóa tài khoản "${userName}"? Hành động này không thể hoàn tác.`)) {
                $.ajax({
                    url: '@Url.Action("Delete")',
                    type: 'POST',
                    data: {
                        id: userId,
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(response) {
                        if (response.success) {
                            location.reload();
                        } else {
                            alert(response.message || 'Có lỗi xảy ra');
                        }
                    },
                    error: function() {
                        alert('Có lỗi xảy ra khi thực hiện yêu cầu');
                    }
                });
            }
        }
    </script>
}
