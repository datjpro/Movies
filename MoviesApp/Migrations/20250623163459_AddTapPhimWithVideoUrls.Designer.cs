// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MoviesApp.Data;

#nullable disable

namespace MoviesApp.Migrations
{
    [DbContext(typeof(WebMoviesDbContext))]
    [Migration("20250623163459_AddTapPhimWithVideoUrls")]
    partial class AddTapPhimWithVideoUrls
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("MoviesApp.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLoginTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("MoviesApp.Models.BinhLuan", b =>
                {
                    b.Property<string>("MaBL")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaND")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MaTap")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("NgayBL")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgaySuaDoi")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("MaBL");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("MaND")
                        .HasDatabaseName("IX_BinhLuan_MaND");

                    b.HasIndex("MaTap")
                        .HasDatabaseName("IX_BinhLuan_MaTap");

                    b.ToTable("BinhLuan");
                });

            modelBuilder.Entity("MoviesApp.Models.DangKy", b =>
                {
                    b.Property<string>("MaDK")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MaLoaiND")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MaND")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("NgayDK")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayKT")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhuongThucTT")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("SoTien")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("MaDK");

                    b.HasIndex("MaLoaiND");

                    b.HasIndex("MaND");

                    b.ToTable("DangKy");
                });

            modelBuilder.Entity("MoviesApp.Models.DanhGia", b =>
                {
                    b.Property<string>("MaDG")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<byte>("DiemDG")
                        .HasColumnType("tinyint");

                    b.Property<string>("MaND")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MaTap")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("NhanXet")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("ThoiGianDG")
                        .HasColumnType("datetime2");

                    b.HasKey("MaDG");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("MaND");

                    b.HasIndex("MaTap")
                        .HasDatabaseName("IX_DanhGia_MaTap");

                    b.HasIndex("MaTap", "MaND")
                        .IsUnique();

                    b.ToTable("DanhGia");
                });

            modelBuilder.Entity("MoviesApp.Models.DanhMuc", b =>
                {
                    b.Property<string>("MaDM")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MoTa")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("TenDM")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaDM");

                    b.ToTable("DanhMuc");
                });

            modelBuilder.Entity("MoviesApp.Models.LichSuXem", b =>
                {
                    b.Property<string>("MaLS")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaND")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MaTap")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("ThoiDiemXem")
                        .HasColumnType("datetime2");

                    b.Property<int>("ThoiGianXem")
                        .HasColumnType("int");

                    b.HasKey("MaLS");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("MaND")
                        .HasDatabaseName("IX_LichSuXem_MaND");

                    b.HasIndex("MaTap");

                    b.HasIndex("ThoiDiemXem")
                        .HasDatabaseName("IX_LichSuXem_ThoiDiemXem");

                    b.ToTable("LichSuXem");
                });

            modelBuilder.Entity("MoviesApp.Models.LoaiNguoiDung", b =>
                {
                    b.Property<string>("MaLoaiND")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal?>("Gia")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int?>("SoNgayHieuLuc")
                        .HasColumnType("int");

                    b.Property<string>("TenLoaiND")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VaiTro")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaLoaiND");

                    b.ToTable("LoaiNguoiDung");
                });

            modelBuilder.Entity("MoviesApp.Models.NguoiDung", b =>
                {
                    b.Property<string>("MaND")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Pass")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SDT")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("TenND")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("MaND");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("NguoiDung");
                });

            modelBuilder.Entity("MoviesApp.Models.Phim", b =>
                {
                    b.Property<string>("MaPhim")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("AnhPhim")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("BienKich")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("DaoDien")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal?>("DiemImdb")
                        .HasColumnType("decimal(3,1)");

                    b.Property<int?>("DiemMetascore")
                        .HasColumnType("int");

                    b.Property<string>("DienVien")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("GiaiThuong")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ImdbId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("LinkPhim")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("LoaiPhim")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("LuotVoteImdb")
                        .HasColumnType("int");

                    b.Property<string>("MaDM")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MaQG")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MaTL")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MoTaPhim")
                        .HasColumnType("ntext");

                    b.Property<int?>("NamPhatHanh")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NgayKhoiChieu")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NgonNgu")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("QuocGiaSanXuat")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("SoTap")
                        .HasColumnType("int");

                    b.Property<string>("TenPhim")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("ThoiLuongPhim")
                        .HasColumnType("int");

                    b.Property<string>("TinhTrang")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("TongSoMua")
                        .HasColumnType("int");

                    b.Property<string>("XepHang")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("MaPhim");

                    b.HasIndex("MaDM");

                    b.HasIndex("MaQG");

                    b.HasIndex("MaTL");

                    b.HasIndex("NamPhatHanh")
                        .HasDatabaseName("IX_Phim_NamPhatHanh");

                    b.HasIndex("TenPhim")
                        .HasDatabaseName("IX_Phim_TenPhim");

                    b.ToTable("Phim");
                });

            modelBuilder.Entity("MoviesApp.Models.PhimYeuThich", b =>
                {
                    b.Property<string>("MaYT")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaND")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MaPhim")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("NgayYT")
                        .HasColumnType("datetime2");

                    b.HasKey("MaYT");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("MaPhim");

                    b.HasIndex("MaND", "MaPhim")
                        .IsUnique();

                    b.ToTable("PhimYeuThich");
                });

            modelBuilder.Entity("MoviesApp.Models.QuocGia", b =>
                {
                    b.Property<string>("MaQG")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("AnhQG")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("MoTa")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("TenQG")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaQG");

                    b.ToTable("QuocGia");
                });

            modelBuilder.Entity("MoviesApp.Models.TapPhim", b =>
                {
                    b.Property<string>("MaTap")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ChiTiet")
                        .HasColumnType("ntext");

                    b.Property<string>("MaPhim")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("NgayPhatHanh")
                        .HasColumnType("datetime2");

                    b.Property<int>("SoTapThuTu")
                        .HasColumnType("int");

                    b.Property<string>("TenTap")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("ThoiLuongTap")
                        .HasColumnType("int");

                    b.Property<string>("VideoUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("MaTap");

                    b.HasIndex("MaPhim")
                        .HasDatabaseName("IX_TapPhim_MaPhim");

                    b.HasIndex("MaPhim", "SoTapThuTu")
                        .IsUnique();

                    b.ToTable("TapPhim");
                });

            modelBuilder.Entity("MoviesApp.Models.TheLoaiPhim", b =>
                {
                    b.Property<string>("MaTL")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MoTa")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("TenTL")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaTL");

                    b.ToTable("TheLoaiPhim");
                });

            modelBuilder.Entity("MoviesApp.Models.ThongKePhim", b =>
                {
                    b.Property<string>("MaPhim")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal>("DiemTrungBinh")
                        .HasColumnType("decimal(3,2)");

                    b.Property<DateTime>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<int>("SoLuotDanhGia")
                        .HasColumnType("int");

                    b.Property<long>("TongLuotXem")
                        .HasColumnType("bigint");

                    b.HasKey("MaPhim");

                    b.ToTable("ThongKePhim");
                });

            modelBuilder.Entity("MoviesApp.Models.ThongKeTapPhim", b =>
                {
                    b.Property<string>("MaTap")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<long>("LuotXem")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.HasKey("MaTap");

                    b.ToTable("ThongKeTapPhim");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("MoviesApp.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("MoviesApp.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoviesApp.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("MoviesApp.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MoviesApp.Models.BinhLuan", b =>
                {
                    b.HasOne("MoviesApp.Models.ApplicationUser", null)
                        .WithMany("BinhLuans")
                        .HasForeignKey("ApplicationUserId");

                    b.HasOne("MoviesApp.Models.NguoiDung", "NguoiDung")
                        .WithMany("BinhLuans")
                        .HasForeignKey("MaND")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MoviesApp.Models.TapPhim", "TapPhim")
                        .WithMany("BinhLuans")
                        .HasForeignKey("MaTap")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NguoiDung");

                    b.Navigation("TapPhim");
                });

            modelBuilder.Entity("MoviesApp.Models.DangKy", b =>
                {
                    b.HasOne("MoviesApp.Models.LoaiNguoiDung", "LoaiNguoiDung")
                        .WithMany("DangKys")
                        .HasForeignKey("MaLoaiND")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MoviesApp.Models.NguoiDung", "NguoiDung")
                        .WithMany("DangKys")
                        .HasForeignKey("MaND")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("LoaiNguoiDung");

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("MoviesApp.Models.DanhGia", b =>
                {
                    b.HasOne("MoviesApp.Models.ApplicationUser", null)
                        .WithMany("DanhGias")
                        .HasForeignKey("ApplicationUserId");

                    b.HasOne("MoviesApp.Models.NguoiDung", "NguoiDung")
                        .WithMany("DanhGias")
                        .HasForeignKey("MaND")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MoviesApp.Models.TapPhim", "TapPhim")
                        .WithMany("DanhGias")
                        .HasForeignKey("MaTap")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NguoiDung");

                    b.Navigation("TapPhim");
                });

            modelBuilder.Entity("MoviesApp.Models.LichSuXem", b =>
                {
                    b.HasOne("MoviesApp.Models.ApplicationUser", null)
                        .WithMany("LichSuXems")
                        .HasForeignKey("ApplicationUserId");

                    b.HasOne("MoviesApp.Models.NguoiDung", "NguoiDung")
                        .WithMany("LichSuXems")
                        .HasForeignKey("MaND")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MoviesApp.Models.TapPhim", "TapPhim")
                        .WithMany("LichSuXems")
                        .HasForeignKey("MaTap")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NguoiDung");

                    b.Navigation("TapPhim");
                });

            modelBuilder.Entity("MoviesApp.Models.Phim", b =>
                {
                    b.HasOne("MoviesApp.Models.DanhMuc", "DanhMuc")
                        .WithMany("Phims")
                        .HasForeignKey("MaDM")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MoviesApp.Models.QuocGia", "QuocGia")
                        .WithMany("Phims")
                        .HasForeignKey("MaQG")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MoviesApp.Models.TheLoaiPhim", "TheLoaiPhim")
                        .WithMany("Phims")
                        .HasForeignKey("MaTL")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DanhMuc");

                    b.Navigation("QuocGia");

                    b.Navigation("TheLoaiPhim");
                });

            modelBuilder.Entity("MoviesApp.Models.PhimYeuThich", b =>
                {
                    b.HasOne("MoviesApp.Models.ApplicationUser", null)
                        .WithMany("PhimYeuThichs")
                        .HasForeignKey("ApplicationUserId");

                    b.HasOne("MoviesApp.Models.NguoiDung", "NguoiDung")
                        .WithMany("PhimYeuThichs")
                        .HasForeignKey("MaND")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MoviesApp.Models.Phim", "Phim")
                        .WithMany("PhimYeuThichs")
                        .HasForeignKey("MaPhim")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NguoiDung");

                    b.Navigation("Phim");
                });

            modelBuilder.Entity("MoviesApp.Models.TapPhim", b =>
                {
                    b.HasOne("MoviesApp.Models.Phim", "Phim")
                        .WithMany("TapPhims")
                        .HasForeignKey("MaPhim")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Phim");
                });

            modelBuilder.Entity("MoviesApp.Models.ThongKePhim", b =>
                {
                    b.HasOne("MoviesApp.Models.Phim", "Phim")
                        .WithOne("ThongKePhim")
                        .HasForeignKey("MoviesApp.Models.ThongKePhim", "MaPhim")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Phim");
                });

            modelBuilder.Entity("MoviesApp.Models.ThongKeTapPhim", b =>
                {
                    b.HasOne("MoviesApp.Models.TapPhim", "TapPhim")
                        .WithOne("ThongKeTapPhim")
                        .HasForeignKey("MoviesApp.Models.ThongKeTapPhim", "MaTap")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TapPhim");
                });

            modelBuilder.Entity("MoviesApp.Models.ApplicationUser", b =>
                {
                    b.Navigation("BinhLuans");

                    b.Navigation("DanhGias");

                    b.Navigation("LichSuXems");

                    b.Navigation("PhimYeuThichs");
                });

            modelBuilder.Entity("MoviesApp.Models.DanhMuc", b =>
                {
                    b.Navigation("Phims");
                });

            modelBuilder.Entity("MoviesApp.Models.LoaiNguoiDung", b =>
                {
                    b.Navigation("DangKys");
                });

            modelBuilder.Entity("MoviesApp.Models.NguoiDung", b =>
                {
                    b.Navigation("BinhLuans");

                    b.Navigation("DangKys");

                    b.Navigation("DanhGias");

                    b.Navigation("LichSuXems");

                    b.Navigation("PhimYeuThichs");
                });

            modelBuilder.Entity("MoviesApp.Models.Phim", b =>
                {
                    b.Navigation("PhimYeuThichs");

                    b.Navigation("TapPhims");

                    b.Navigation("ThongKePhim");
                });

            modelBuilder.Entity("MoviesApp.Models.QuocGia", b =>
                {
                    b.Navigation("Phims");
                });

            modelBuilder.Entity("MoviesApp.Models.TapPhim", b =>
                {
                    b.Navigation("BinhLuans");

                    b.Navigation("DanhGias");

                    b.Navigation("LichSuXems");

                    b.Navigation("ThongKeTapPhim");
                });

            modelBuilder.Entity("MoviesApp.Models.TheLoaiPhim", b =>
                {
                    b.Navigation("Phims");
                });
#pragma warning restore 612, 618
        }
    }
}
